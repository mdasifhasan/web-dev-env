def frontend = 'frontend'
def backend = 'backend'

pipeline {
    agent none
    stages {
        stage ('TEST'){
            parallel {            
                stage ('Frontend') {
                    environment {
                        CI = 'true'
                    }
                    agent {
                        docker {
                            image 'node:12-alpine'
                        }
                    }                
                    stages {
                        stage('Frontend-Install') {
                            steps {
                                dir(frontend){
                                    sh 'mkdir bk'
                                    sh 'cp package.json ./bk/package.json'
                                    sh 'cd bk && npm install'
                                    sh 'mv bk/node_modules node_modules'
                                    sh 'rm -rf bk'
                                }
                            }
                        }
                        stage('Frontend-Test') {
                            steps {
                                dir(frontend){
                                    sh 'npm test'
                                }
                            }
                        }
                    }
                }
                stage ('Backend') {
                    agent {
                        docker {
                            image 'golang:1.12-alpine3.10'
                        }
                    }                
                    stages {
                        stage('Backend-Test') {
                            steps {
                                dir(backend){
                                    sh 'CGO_ENABLED=0 GOOS=linux go test'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}